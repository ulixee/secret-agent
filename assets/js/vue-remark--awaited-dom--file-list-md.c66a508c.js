(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{vu0Y:function(e,t,i){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},yuD6:function(e,t,i){"use strict";i.r(t);var o=i("Ow4o"),n=i("vu0Y"),r=i("pLV6");function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.a.config.optionMergeStrategies;var a={VueRemarkRoot:n.a},d=function(e){var t=e.options.components=e.options.components||{},i=e.options.computed=e.options.computed||{};Object.keys(a).forEach((function(e){"object"===s(a[e])&&"function"==typeof a[e].render||"function"==typeof a[e]&&"function"==typeof a[e].options.render?t[e]=a[e]:i[e]=function(){return a[e]}}))},u=r.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",c={excerpt:null,title:"[AwaitedDOM](/docs/basic-interfaces/awaited-dom) <span>/</span> FileList"};var f=function(e){e.options[p]&&(e.options[p]=c),r.a.util.defineReactive(e.options,p,c),e.options.computed=u.computed({$frontmatter:function(){return e.options[p]}},e.options.computed)},l=Object(o.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("VueRemarkRoot",[i("h1",{attrs:{id:"awaiteddom-spanspan-filelist"}},[i("a",{attrs:{href:"#awaiteddom-spanspan-filelist","aria-hidden":"true"}},[e._v("#")]),i("a",{attrs:{href:"/docs/basic-interfaces/awaited-dom"}},[e._v("AwaitedDOM")]),i("span",[e._v("/")]),e._v(" FileList")]),i("div",{staticClass:"overview"},[e._v("An object of this type is returned by the "),i("code",[e._v("files")]),e._v(" property of the HTML "),i("code",[e._v("<input>")]),e._v(" element; this lets you access the list of files selected with the "),i("code",[e._v('<input type="file">')]),e._v(" element. It's also used for a list of files dropped into web content when using the drag and drop API; see the "),i("code",[e._v("DataTransfer")]),e._v(" object for details on this usage.")]),i("h2",{attrs:{id:"properties"}},[i("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),i("h3",{attrs:{id:"length"}},[i("a",{attrs:{href:"#length","aria-hidden":"true"}},[e._v("#")]),e._v(".length "),i("div",{staticClass:"specs"},[i("i",[e._v("W3C")])])]),i("p",[e._v("A read-only value indicating the number of files in the list.")]),i("h4",{attrs:{id:"type-promisenumber"}},[i("a",{attrs:{href:"#type-promisenumber","aria-hidden":"true"}},[e._v("#")]),i("strong",[e._v("Type")]),e._v(": "),i("code",{pre:!0},[e._v("Promise<number>")])]),i("h2",{attrs:{id:"methods"}},[i("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),i("h3",{attrs:{id:"item"}},[i("a",{attrs:{href:"#item","aria-hidden":"true"}},[e._v("#")]),e._v(".item"),i("em",[e._v("(index)")]),i("div",{staticClass:"specs"},[i("i",[e._v("W3C")])])]),i("p",[e._v("Returns a "),i("code",[e._v("File")]),e._v(" object representing the file at the specified index in the file list.")]),i("h4",{attrs:{id:"arguments"}},[i("a",{attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),i("strong",[e._v("Arguments")]),e._v(":")]),i("ul",[i("li",[e._v("index "),i("code",{pre:!0},[e._v("number")]),e._v(". Needs content.")])]),i("h4",{attrs:{id:"returns-file"}},[i("a",{attrs:{href:"#returns-file","aria-hidden":"true"}},[e._v("#")]),i("strong",[e._v("Returns")]),e._v(": "),i("a",{attrs:{href:"/docs/awaited-dom/file"}},[i("code",{pre:!0},[e._v("File")])])])])}),[],!1,null,null,null);"function"==typeof d&&d(l),"function"==typeof f&&f(l);t.default=l.exports}}]);